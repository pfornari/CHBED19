paths:
  /api/carts:
    get:
      summary: Obtiene todos los carritos de la app.
      tags:
        - Carts
      responses:
        "200":
          description: Request exitoso. Retorna un array con los carritos que existen en la app.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"

        "400":
          description: Request no encontrado.
        "500":
          description: Error del lado del servidor.
    post:
      summary: Crea un nuevo carrito en la base de datos. Se hace automáticamente al crear un usuario.
      tags:
        - Carts
      requestBody:
        content:
          application/json:
            required: true
            schema:
              $ref: "#/components/requestBodies/AddCart"

      responses:
        "200":
          description: Request exitoso. Genera un nuevo carrito y retorna el carrito creado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"

        "400":
          description: Request no encontrado.
        "500":
          description: Error del lado del servidor.

  /api/carts/{cid}:
    get:
      summary: Obtiene un único carrito de la app, especificado por el parámetro :id.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito que se busca.
          schema:
            $type: String

      responses:
        "200":
          description: Request exitoso. Retorna un objeto con las prodpiedades de un único carrito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"

        "400":
          description: Request no encontrado.
        "500":
          description: Error del lado del servidor.
    delete:
      summary: Vacía un único carrito de la app, especificado por el parámetro :cid.
      tags:
        - Carts

      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito que se busca.
          schema:
            $type: String

      responses:
        "200":
          description: Request exitoso. Retorna el carrito vacío.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"

        "400":
          description: Request no encontrado.
        "500":
          description: Error del lado del servidor.

  /api/carts/{cid}/product/{pid}:
    post:
      summary: Agrega un nuevo producto, especificado por el parámetro :pid, al carrito, especificado por el parámetro :cid.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito que se busca.
          schema:
            $type: String

        - name: pid
          in: path
          required: true
          description: id del producto que se quiere agregar.
          shema:
            $type: String

      responses:
        "200":
          description: Request exitoso. Devuelve el carrito con su array de productos.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"

        "400":
          description: Request no encontrado.
        "500":
          description: Error del lado del servidor.

    put:
      summary: Modifica la cantidad de un producto, especificado por el parámetro :pid, del carrito, especificado por el parámetro :cid.
      tags:
        - Carts

      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito que se busca.
          schema:
            $type: String

        - name: pid
          in: path
          required: true
          description: id del producto del que se quiere cambiar la cantidad.
          schema:
            $type: String

      requestBody:
        content:
          application/json:
            required: true
            schema:
              $ref: "#/components/requestBodies/ChangeQuantity"

  

      responses:
        "200":
          description: Request exitoso. Retorna el carrito con la cantidad de producto modificada.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"

        "400":
          description: Request no encontrado.
        "500":
          description: Error del lado del servidor.

    delete:
      summary: Elimina un producto, especificado por el parámetro :pid, del carrito, especificado por el parámetro :cid.
      tags:
        - Carts

      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito que se busca.
          schema:
            $type: String

        - name: pid
          in: path
          required: true
          description: id del producto que se quiere eliminar.
          schema:
            $type: String

      responses:
        "200":
          description: Request exitoso. Retorna el carrito sin el producto que se eliminó.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"

        "400":
          description: Request no encontrado.
        "500":
          description: Error del lado del servidor.

  /api/carts/{cid}/purchase:
    post:
      summary: Completa la compra, obtiene el precio total y envía un mail de confirmación al usuario.
      tags:
        - Carts

      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito que se busca.
          schema:
            $type: String

      responses:
        "200":
          description: Request exitoso. Retorna el ticket con el resumen de la compra (carrito, precio total, email y hora de la compra).
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Ticket"

        "400":
          description: Request no encontrado.
        "500":
          description: Error del lado del servidor.


